import sounddevice as sd
from pydub import AudioSegment
from openai import OpenAI
import os

def record_audio(filename, duration=5, sample_rate=44100, channels=1):
    
    print("\nOptager!")
    
    audio_data = sd.rec(int(duration * sample_rate), samplerate=sample_rate, channels=channels, dtype='int16')
    
    sd.wait() 
    print("\nFærdig!")

    audio_segment = AudioSegment(
        audio_data.tobytes(),
        frame_rate=sample_rate,
        sample_width=audio_data.dtype.itemsize,
        channels=channels
    )

    audio_segment.export(filename, format="mp3")

def transcribeAndTranslate(audio_file):
    
    with open("key.txt", 'r') as key_file:
        API_KEY = key_file.read().strip()

    client = OpenAI(api_key=API_KEY)
    
    audio = open(audio_file, "rb")
    
    transcription = client.audio.transcriptions.create(
        model="whisper-1", 
        file=audio, 
        response_format="text"
    )

    completion = client.chat.completions.create(
        model="ft:gpt-3.5-turbo-0125:personal:medilingo:8z7ujSsh",
        messages=[
            {"role": "system", "content": "Translating from Danish to Ukrainian for medical purposes"},
            {"role": "user", "content": transcription}
        ]
    )
    
    return transcription, completion.choices[0].message.content
    
if __name__ == "__main__":
    
    filename = "mediLingo.mp3"
    
    record_audio(filename, duration=5)

    transcription, translation = transcribeAndTranslate(filename)
    
    print("\n")
    print("Input: " + transcription)
    print("Oversættelse: " + translation)
    print("\n")
    
    #removing file afterwards
    os.remove(filename)
    print(f"Deleted: {filename}")
